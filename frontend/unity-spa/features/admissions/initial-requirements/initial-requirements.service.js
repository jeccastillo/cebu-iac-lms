(function () {
  'use strict';

  angular
    .module('unityApp')
    .factory('InitialRequirementsService', InitialRequirementsService);

  InitialRequirementsService.$inject = ['$http', 'APP_CONFIG'];
  function InitialRequirementsService($http, APP_CONFIG) {
    var BASE = APP_CONFIG.API_BASE; // e.g. /laravel-api/public/api/v1

    function _unwrap(resp) {
      return (resp && resp.data) ? resp.data : resp;
    }

    return {
      // GET /public/initial-requirements/{hash}
      getList: function (hash) {
        return $http.get(BASE + '/public/initial-requirements/' + encodeURIComponent(hash))
          .then(_unwrap);
      },

      // POST multipart: /public/initial-requirements/{hash}/upload/{appReqId}
      upload: function (hash, appReqId, formDataConfig) {
        // formDataConfig must be a config generated by ng-file-upload (Upload.upload)
        // This method exists for parity with other services, but we'll use Upload directly in the controller.
        return $http.post(
          BASE + '/public/initial-requirements/' + encodeURIComponent(hash) + '/upload/' + encodeURIComponent(appReqId),
          formDataConfig.data,
          {
            headers: angular.extend({ 'Content-Type': undefined }, formDataConfig.headers || {}),
            transformRequest: angular.identity
          }
        ).then(_unwrap);
      }
    };
  }
})();
